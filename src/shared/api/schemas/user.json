{
  "openapi": "3.0.1",
  "info": {
    "title": "User-Service-API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/user"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/users/{userId}/upload": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Изменение аватарки пользователя",
        "operationId": "uploadAvatarByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "image"
                ],
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/block": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Блокировка всех пользователей по userIds",
        "operationId": "blockUsersByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIdsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/activate": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Разблокировка всех пользователей по userIds",
        "operationId": "activateUsersByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIdsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/{uuid}/update": {
      "post": {
        "tags": [
          "organization-controller"
        ],
        "summary": "Редактирование организаций",
        "operationId": "update",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/create": {
      "post": {
        "tags": [
          "organization-controller"
        ],
        "summary": "Создание организаций",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Получение всех пользователей",
        "operationId": "getAll",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "login",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fio",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "CLOSED",
                "BLOCKED",
                "PENDING"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseUserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Получение данных пользователя по userId",
        "operationId": "getUserInfoById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Получение данных пользователя под кем авторизовались",
        "operationId": "getUserInfoMe",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/image/download/{imageUUID}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Скачивание аватарки пользователя",
        "operationId": "downloadImage",
        "parameters": [
          {
            "name": "imageUUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "summary": "Получить все организаций",
        "operationId": "getAll_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/{uuid}": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "summary": "Получить организаций по UUID",
        "operationId": "getById",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/{uuid}/child": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "summary": "Получить все подорганизаций по UUID(uuid главного организаций)",
        "operationId": "childOrganizations",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/org-structure": {
      "get": {
        "tags": [
          "org-structure-controller"
        ],
        "summary": "Получить все данные по оргструктуре",
        "operationId": "getAll_2",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DEPARTMENT",
                "POSITION",
                "GROUP"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrgStructureDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/org-structure/{uuid}": {
      "get": {
        "tags": [
          "org-structure-controller"
        ],
        "operationId": "get",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrgStructureDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/org-structure/{uuid}/child": {
      "get": {
        "tags": [
          "org-structure-controller"
        ],
        "operationId": "childOrgStructures",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrgStructureDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/{uuid}/delete": {
      "delete": {
        "tags": [
          "organization-controller"
        ],
        "summary": "Удаление организаций по UUID",
        "operationId": "delete",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "OrgStructureDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nameKk": {
            "type": "string"
          },
          "nameRu": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "DEPARTMENT",
              "POSITION",
              "GROUP"
            ]
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationDto"
          },
          "parentOrgStructure": {
            "$ref": "#/components/schemas/OrgStructureDto"
          },
          "managerPosition": {
            "$ref": "#/components/schemas/OrgStructureDto"
          },
          "spaceId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "OrganizationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nameKk": {
            "type": "string"
          },
          "nameRu": {
            "type": "string"
          },
          "parentOrganization": {
            "$ref": "#/components/schemas/OrganizationDto"
          }
        }
      },
      "PermitsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "nameRu": {
            "type": "string"
          },
          "nameKk": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "RealmsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "nameRu": {
            "type": "string"
          },
          "nameKk": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "RolesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "nameRu": {
            "type": "string"
          },
          "nameKk": {
            "type": "string"
          },
          "realm": {
            "$ref": "#/components/schemas/RealmsDto"
          },
          "permits": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermitsDto"
            }
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "SpacesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "nameRu": {
            "type": "string"
          },
          "nameKk": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "iin": {
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/OrgStructureDto"
          },
          "department": {
            "$ref": "#/components/schemas/OrgStructureDto"
          },
          "personalAffairId": {
            "type": "string",
            "format": "uuid"
          },
          "imagePath": {
            "type": "string"
          },
          "imageId": {
            "type": "string"
          },
          "ldapUsername": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "CLOSED",
              "BLOCKED",
              "PENDING"
            ]
          },
          "note": {
            "type": "string"
          },
          "blockDate": {
            "type": "string",
            "format": "date"
          },
          "space": {
            "$ref": "#/components/schemas/SpacesDto"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolesDto"
            }
          }
        }
      },
      "UserIdsRequest": {
        "required": [
          "userIds"
        ],
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "OrganizationRequest": {
        "required": [
          "nameKk",
          "nameRu"
        ],
        "type": "object",
        "properties": {
          "nameKk": {
            "type": "string"
          },
          "nameRu": {
            "type": "string"
          },
          "parentOrganizationId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PageResponseUserDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "currentPage": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GeneralResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}