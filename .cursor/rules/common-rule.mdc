---
description: 
globs: 
alwaysApply: true
---
# Mantine & Form Handling

- The UI framework is **Mantine v8.1.2**.
- Use Mantine components from `@mantine/core`, `@mantine/form`, `@mantine/dates`, `@mantine/dropzone`, and `@mantine/hooks`.
- All forms must use `useForm` from `@mantine/form` with `initialValues` and `validate`.
- Do **not** use React Hook Form or other form libraries.
- For date handling, use `dayjs` objects (not raw strings or `Date` or `date-fns`).
- Do **not** use `withAsterisk`; mark required fields through validation logic.
- Always use Mantine theming and colorScheme from context; do not hardcode colors.
- Use `bdrs` for border-radius styling.
- Avoid `any`; always use explicit interfaces or types for props and state.

# Project Structure

- Main entry point: [`src/app/main.tsx`](mdc:src/app/main.tsx)
- Route definitions and tree: [`src/routes/`](mdc:src/routes) and [`src/routeTree.gen.ts`](mdc:src/routeTree.gen.ts)
- Shared Mantine theme and customizations: [`src/shared/libs/mantine/theme/`](mdc:src/shared/libs/mantine/theme)
- Shared icons: [`src/shared/icons/`](mdc:src/shared/icons)
- Features are organized in [`src/features/`](mdc:src/features) by domain (e.g., `header`, `navbar`).

# Routing

- Uses **TanStack Router** for routing.
- Route files are located in [`src/routes/`](mdc:src/routes/).
- Route tree is generated in [`src/routeTree.gen.ts`](mdc:src/routeTree.gen.ts).
- For route setup and architecture, see the following rules:
  - [tanstack-react-router_setup-and-architecture](mdc:tanstack-react-router_setup-and-architecture.mdc)
  - [tanstack-react-router_routing](mdc:tanstack-react-router_routing.mdc)
  - [tanstack-react-router_api](mdc:tanstack-react-router_api.mdc)
  - [tanstack-react-router_guide](mdc:tanstack-react-router_guide.mdc)
  
# Theming & Styles

- All custom Mantine theme overrides are in [`src/shared/libs/mantine/theme/`](mdc:src/shared/libs/mantine/theme).
- Use Mantine's theming system; do not hardcode colors or styles.
- For custom styles, prefer CSS modules (e.g., `app-shell.module.css`).

# Icon Usage
- All SVG icons are stored in [`src/shared/icons/`](mdc:src/shared/icons).
- Import icons as React components where possible.
